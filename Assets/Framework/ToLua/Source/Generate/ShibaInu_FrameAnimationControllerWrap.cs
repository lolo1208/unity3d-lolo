//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ShibaInu_FrameAnimationControllerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ShibaInu.FrameAnimationController), typeof(System.Object));
		L.RegFunction("AddAnimation", AddAnimation);
		L.RegFunction("SetAssetDir", SetAssetDir);
		L.RegFunction("SetUseMainTex", SetUseMainTex);
		L.RegFunction("PlayAnimation", PlayAnimation);
		L.RegFunction("StopAnimation", StopAnimation);
		L.RegFunction("RemoveAnimation", RemoveAnimation);
		L.RegFunction("Update", Update);
		L.RegFunction("Clear", Clear);
		L.RegFunction("New", _CreateShibaInu_FrameAnimationController);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateShibaInu_FrameAnimationController(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				ShibaInu.FrameAnimationController obj = new ShibaInu.FrameAnimationController();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: ShibaInu.FrameAnimationController.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddAnimation(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			ShibaInu.FrameAnimationController obj = (ShibaInu.FrameAnimationController)ToLua.CheckObject<ShibaInu.FrameAnimationController>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			string arg1 = ToLua.CheckString(L, 3);
			int o = obj.AddAnimation(arg0, arg1);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetAssetDir(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			ShibaInu.FrameAnimationController obj = (ShibaInu.FrameAnimationController)ToLua.CheckObject<ShibaInu.FrameAnimationController>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.SetAssetDir(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetUseMainTex(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			ShibaInu.FrameAnimationController obj = (ShibaInu.FrameAnimationController)ToLua.CheckObject<ShibaInu.FrameAnimationController>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetUseMainTex(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayAnimation(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				ShibaInu.FrameAnimationController obj = (ShibaInu.FrameAnimationController)ToLua.CheckObject<ShibaInu.FrameAnimationController>(L, 1);
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				int o = obj.PlayAnimation(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 4)
			{
				ShibaInu.FrameAnimationController obj = (ShibaInu.FrameAnimationController)ToLua.CheckObject<ShibaInu.FrameAnimationController>(L, 1);
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
				int o = obj.PlayAnimation(arg0, arg1, arg2);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 5)
			{
				ShibaInu.FrameAnimationController obj = (ShibaInu.FrameAnimationController)ToLua.CheckObject<ShibaInu.FrameAnimationController>(L, 1);
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
				bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
				int o = obj.PlayAnimation(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 6)
			{
				ShibaInu.FrameAnimationController obj = (ShibaInu.FrameAnimationController)ToLua.CheckObject<ShibaInu.FrameAnimationController>(L, 1);
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
				bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
				bool arg4 = LuaDLL.luaL_checkboolean(L, 6);
				int o = obj.PlayAnimation(arg0, arg1, arg2, arg3, arg4);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: ShibaInu.FrameAnimationController.PlayAnimation");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopAnimation(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ShibaInu.FrameAnimationController obj = (ShibaInu.FrameAnimationController)ToLua.CheckObject<ShibaInu.FrameAnimationController>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.StopAnimation(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveAnimation(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ShibaInu.FrameAnimationController obj = (ShibaInu.FrameAnimationController)ToLua.CheckObject<ShibaInu.FrameAnimationController>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.RemoveAnimation(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				ShibaInu.FrameAnimationController obj = (ShibaInu.FrameAnimationController)ToLua.CheckObject<ShibaInu.FrameAnimationController>(L, 1);
				obj.Update();
				return 0;
			}
			else if (count == 2)
			{
				ShibaInu.FrameAnimationController obj = (ShibaInu.FrameAnimationController)ToLua.CheckObject<ShibaInu.FrameAnimationController>(L, 1);
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
				obj.Update(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: ShibaInu.FrameAnimationController.Update");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ShibaInu.FrameAnimationController obj = (ShibaInu.FrameAnimationController)ToLua.CheckObject<ShibaInu.FrameAnimationController>(L, 1);
			obj.Clear();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

